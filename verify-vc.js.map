{"version":3,"file":"verify-vc.js","sources":["../vendor/toolkit/packages/qr-code-scanner/src/i18n.js","../node_modules/async-mutex/index.mjs","../vendor/toolkit/packages/qr-code-scanner/src/qr-code-scanner.js","../src/verify-vc.js"],"sourcesContent":["import {createInstance} from '@dbp-toolkit/common/i18next.js';\n\nimport de from './i18n/de/translation.json';\nimport en from './i18n/en/translation.json';\n\nexport const i18n = createInstance({en: en, de: de}, 'de', 'en');","const E_TIMEOUT = new Error('timeout while waiting for mutex to become available');\nconst E_ALREADY_LOCKED = new Error('mutex already locked');\nconst E_CANCELED = new Error('request for lock canceled');\n\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nclass Semaphore {\n    constructor(_maxConcurrency, _cancelError = E_CANCELED) {\n        this._maxConcurrency = _maxConcurrency;\n        this._cancelError = _cancelError;\n        this._queue = [];\n        if (_maxConcurrency <= 0) {\n            throw new Error('semaphore must be initialized to a positive value');\n        }\n        this._value = _maxConcurrency;\n    }\n    acquire() {\n        const locked = this.isLocked();\n        const ticketPromise = new Promise((resolve, reject) => this._queue.push({ resolve, reject }));\n        if (!locked)\n            this._dispatch();\n        return ticketPromise;\n    }\n    runExclusive(callback) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const [value, release] = yield this.acquire();\n            try {\n                return yield callback(value);\n            }\n            finally {\n                release();\n            }\n        });\n    }\n    isLocked() {\n        return this._value <= 0;\n    }\n    /** @deprecated Deprecated in 0.3.0, will be removed in 0.4.0. Use runExclusive instead. */\n    release() {\n        if (this._maxConcurrency > 1) {\n            throw new Error('this method is unavailable on semaphores with concurrency > 1; use the scoped release returned by acquire instead');\n        }\n        if (this._currentReleaser) {\n            const releaser = this._currentReleaser;\n            this._currentReleaser = undefined;\n            releaser();\n        }\n    }\n    cancel() {\n        this._queue.forEach((ticket) => ticket.reject(this._cancelError));\n        this._queue = [];\n    }\n    _dispatch() {\n        const nextTicket = this._queue.shift();\n        if (!nextTicket)\n            return;\n        let released = false;\n        this._currentReleaser = () => {\n            if (released)\n                return;\n            released = true;\n            this._value++;\n            this._dispatch();\n        };\n        nextTicket.resolve([this._value--, this._currentReleaser]);\n    }\n}\n\nvar __awaiter$1 = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nclass Mutex {\n    constructor(cancelError) {\n        this._semaphore = new Semaphore(1, cancelError);\n    }\n    acquire() {\n        return __awaiter$1(this, void 0, void 0, function* () {\n            const [, releaser] = yield this._semaphore.acquire();\n            return releaser;\n        });\n    }\n    runExclusive(callback) {\n        return this._semaphore.runExclusive(() => callback());\n    }\n    isLocked() {\n        return this._semaphore.isLocked();\n    }\n    /** @deprecated Deprecated in 0.3.0, will be removed in 0.4.0. Use runExclusive instead. */\n    release() {\n        this._semaphore.release();\n    }\n    cancel() {\n        return this._semaphore.cancel();\n    }\n}\n\nvar __awaiter$2 = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction withTimeout(sync, timeout, timeoutError = E_TIMEOUT) {\n    return {\n        acquire: () => new Promise((resolve, reject) => __awaiter$2(this, void 0, void 0, function* () {\n            let isTimeout = false;\n            const handle = setTimeout(() => {\n                isTimeout = true;\n                reject(timeoutError);\n            }, timeout);\n            try {\n                const ticket = yield sync.acquire();\n                if (isTimeout) {\n                    const release = Array.isArray(ticket) ? ticket[1] : ticket;\n                    release();\n                }\n                else {\n                    clearTimeout(handle);\n                    resolve(ticket);\n                }\n            }\n            catch (e) {\n                if (!isTimeout) {\n                    clearTimeout(handle);\n                    reject(e);\n                }\n            }\n        })),\n        runExclusive(callback) {\n            return __awaiter$2(this, void 0, void 0, function* () {\n                let release = () => undefined;\n                try {\n                    const ticket = yield this.acquire();\n                    if (Array.isArray(ticket)) {\n                        release = ticket[1];\n                        return yield callback(ticket[0]);\n                    }\n                    else {\n                        release = ticket;\n                        return yield callback();\n                    }\n                }\n                finally {\n                    release();\n                }\n            });\n        },\n        /** @deprecated Deprecated in 0.3.0, will be removed in 0.4.0. Use runExclusive instead. */\n        release() {\n            sync.release();\n        },\n        cancel() {\n            return sync.cancel();\n        },\n        isLocked: () => sync.isLocked(),\n    };\n}\n\n// eslint-disable-next-lisne @typescript-eslint/explicit-module-boundary-types\nfunction tryAcquire(sync, alreadyAcquiredError = E_ALREADY_LOCKED) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return withTimeout(sync, 0, alreadyAcquiredError);\n}\n\nexport { E_ALREADY_LOCKED, E_CANCELED, E_TIMEOUT, Mutex, Semaphore, tryAcquire, withTimeout };\n","import {i18n} from './i18n';\nimport {css, html, unsafeCSS} from 'lit-element';\nimport DBPLitElement from '@dbp-toolkit/common/dbp-lit-element';\nimport * as commonStyles from '@dbp-toolkit/common/styles';\nimport {ScopedElementsMixin} from '@open-wc/scoped-elements';\nimport {Icon, MiniSpinner} from '@dbp-toolkit/common';\nimport {classMap} from 'lit-html/directives/class-map.js';\nimport * as commonUtils from '@dbp-toolkit/common/utils';\nimport {getIconSVGURL} from '@dbp-toolkit/common';\nimport {Mutex} from 'async-mutex';\nimport {name as pkgName} from './../package.json';\n\n\n/**\n * Returns the ID for the most important device\n *\n * @param {Map} devices\n * @returns {string|null} the ID\n */\nfunction getPrimaryDevice(devices) {\n    if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {\n        if (devices.has('environment'))\n            return 'environment';\n    }\n    if (devices.size) {\n        return Array.from(devices)[0][0];\n    }\n    return null;\n}\n\n/**\n * Returns a map of device IDs and translated names.\n *\n * Moreimportant devices first.\n *\n * @returns {Map<string,string>} the map of devices\n */\nasync function getVideoDevices() {\n    let devices_map = new Map();\n    if (navigator.mediaDevices\n        && navigator.mediaDevices.enumerateDevices\n        && navigator.mediaDevices.getUserMedia) {\n\n        let devices;\n        try {\n            devices = await navigator.mediaDevices.enumerateDevices();\n        } catch (err) {\n            console.log(err.name + \": \" + err.message);\n            return devices_map;\n        }\n\n        for (let device of devices) {\n            if (device.kind === 'videoinput') {\n                let id = device.deviceId;\n                if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {\n                    devices_map.set('environment', i18n.t('back-camera'));\n                    devices_map.set('user', i18n.t('front-camera'));\n                } else {\n                    devices_map.set(id ? id : true, device.label || i18n.t('camera') + (devices_map.size + 1));\n                }\n            }\n        }\n        return devices_map;\n    } else {\n        return devices_map;\n    }\n}\n\n/**\n * Checks if user Agent is IOS, but not Safari browser\n *\n * @param {string} devices_map\n * @returns {object|null} a video element or null\n */\nfunction checkIosMobileSupport(devices_map) {\n    return /(iPhone|iPad|iPod).*(CriOS|FxiOS|OPT|EdgiOS|YaBrowser|AlohaBrowser)/i.test(navigator.userAgent);\n}\n\n/**\n * @param {string} deviceId\n * @returns {object|null} a video element or null\n */\nasync function createVideoElement(deviceId) {\n\n    let videoId = deviceId;\n    let constraint = { video:  { deviceId: videoId } };\n    if ( (videoId === 'environment' || videoId === '') ) {\n        console.log(\"vid:\", videoId);\n        constraint =  { video: { facingMode: \"environment\" } };\n    } else if ( videoId === 'user' ) {\n        console.log(\"vid2:\", videoId);\n        constraint =  { video: { facingMode: \"user\", mirrored: true } };\n    }\n\n    let stream = null;\n    try {\n        stream = await navigator.mediaDevices.getUserMedia(constraint);\n    } catch(e) {\n        console.log(e);\n    }\n\n    if (stream !== null) {\n        let video = document.createElement(\"video\");\n        video.srcObject = stream;\n        return video;\n    }\n\n    return null;\n}\n\nclass QRScanner {\n    constructor() {\n        this._engine = null;\n        this._canvas = document.createElement(\"canvas\");\n        this._scanner = null;\n    }\n\n    async scan(canvas, x, y, width, height) {\n        if (this._scanner === null)  {\n            this._scanner = (await import('qr-scanner')).default;\n            this._scanner.WORKER_PATH = commonUtils.getAssetURL(pkgName, 'qr-scanner-worker.min.js');\n        }\n        if (this._engine === null) {\n            this._engine = await this._scanner.createQrEngine(this._scanner.WORKER_PATH);\n        }\n        try {\n            return {data: await this._scanner.scanImage(canvas, {x: x, y: y, width: width, height: height}, this._engine, this._canvas)};\n        } catch (e) {\n            return null;\n        }\n    }\n}\n\n\nexport class QrCodeScanner extends ScopedElementsMixin(DBPLitElement) {\n    constructor() {\n        super();\n        this.lang = 'de';\n\n        this._askPermission = false;\n        this._loading = false;\n\n        this.showOutput = false;\n        this.stopScan = false;\n\n        this._activeCamera = '';\n\n        this._devices = new Map();\n        this._requestID = null;\n        this._loadingMessage = '';\n\n        this.matchRegex = '.*';\n        this._videoElement = null;\n        this._outputData = null;\n        this._videoRunning = false;\n        this._lock = new Mutex();\n    }\n\n    static get scopedElements() {\n        return {\n            'dbp-icon': Icon,\n            'dbp-mini-spinner': MiniSpinner,\n        };\n    }\n\n    static get properties() {\n        return {\n            lang: { type: String },\n            showOutput: { type: Boolean, attribute: 'show-output' },\n            stopScan: { type: Boolean, attribute: 'stop-scan' },\n            matchRegex: { type: String, attribute: 'match-regex' },\n            _activeCamera: { type: String, attribute: false },\n            _loading: { type: Boolean, attribute: false },\n            _devices: { type: Map, attribute: false},\n            _loadingMessage: { type: String, attribute: false },\n            _outputData: { type: String, attribute: false },\n            _askPermission: { type: Boolean, attribute: false },\n            _videoRunning: { type: Boolean, attribute: false },\n        };\n    }\n\n    async connectedCallback() {\n        super.connectedCallback();\n        i18n.changeLanguage(this.lang);\n\n        let devices = await getVideoDevices();\n        this._activeCamera = getPrimaryDevice(devices) || '';\n        this._devices = devices;\n\n        if (!this.stopScan) {\n            await this.startScanning();\n        }\n    }\n\n    async disconnectedCallback() {\n        await this.stopScanning();\n        super.disconnectedCallback();\n    }\n\n    updated(changedProperties) {\n        if (changedProperties.get('stopScan') && !this.stopScan) {\n            this.startScanning();\n        } else if (!changedProperties.get('stopScan') && this.stopScan) {\n            this.stopScanning();\n        }\n    }\n\n    update(changedProperties) {\n        changedProperties.forEach((oldValue, propName) => {\n            switch (propName) {\n                case \"lang\":\n                    i18n.changeLanguage(this.lang);\n                    break;\n            }\n        });\n\n        super.update(changedProperties);\n    }\n\n    /**\n     * Init and start the video and QR code scan\n     */\n    async startScanning() {\n        await this.stopScanning();\n\n        const release = await this._lock.acquire();\n        try {\n            await this._startScanning();\n        } finally {\n            release();\n        }\n    }\n\n    async _startScanning() {\n        console.assert(this._lock.isLocked());\n        await this.updateComplete;\n\n        let targetCanvas = this._(\"#canvas\");\n        let targetvideo = this._(\"#video\");\n        let canvasElement = document.createElement(\"canvas\");\n        let firstDrawDone = false;\n\n        this._askPermission = true;\n        this._loadingMessage = html` ${i18n.t('no-camera-access')} <br> ${i18n.t('check-access')}`;\n        let video = await createVideoElement(this._activeCamera);\n        if ( video !== null ) {\n            targetvideo.appendChild(video);\n        }\n        this._askPermission = false;\n\n        let lastCode = null;\n        let lastSentData = null;\n\n        let detector = new QRScanner();\n        let detectorRunning = false;\n\n        const tick = () => {\n            this._requestID = null;\n            if (video.readyState === video.HAVE_ENOUGH_DATA) {\n                this._loading = false;\n                // draw into a temporary canvas first\n                canvasElement.height = video.videoHeight;\n                canvasElement.width = video.videoWidth;\n                let canvas = canvasElement.getContext(\"2d\");\n                canvas.drawImage(video, 0, 0, canvasElement.width, canvasElement.height);\n\n                let maskWidth = canvasElement.width;\n                let maskHeight = canvasElement.height;\n                let maskStartX = 0;\n                let maskStartY = 0;\n\n                let maxSize = canvasElement.width > canvasElement.height ? canvasElement.height/4 * 3 : canvasElement.width/4 * 3;\n                console.assert(maxSize <= canvasElement.width && maxSize <= canvasElement.height);\n                maskWidth = maxSize;\n                maskHeight = maxSize;\n                maskStartX = canvasElement.width/2 - maskWidth/2;\n                maskStartY = canvasElement.height/2 - maskHeight/2;\n\n                let lastVideo = video;\n                if (!detectorRunning) {\n                    detectorRunning = true;\n                    detector.scan(canvasElement, maskStartX, maskStartY, maskWidth, maskHeight).then((code) => {\n                        detectorRunning = false;\n                        // if we got restarted then the video element is new, so stop then.\n                        if (lastVideo !== this._videoElement)\n                            return;\n                        lastCode = code;\n\n                        if (code) {\n                            if (lastSentData !== code.data) {\n                                this._outputData = code.data;\n                                this.dispatchEvent(new CustomEvent(\"code-detected\",\n                                    {bubbles: true, composed: true, detail: {'code': code.data}}));\n                            }\n                            lastSentData = code.data;\n                        } else {\n                            this._outputData = null;\n                            lastSentData = null;\n                        }\n                    });\n                }\n\n                let matched = lastCode ? lastCode.data.match(this.matchRegex) !== null : false;\n\n                //draw mask\n                canvas.beginPath();\n                canvas.fillStyle = \"#0000006e\";\n                canvas.moveTo(0,0);\n                canvas.lineTo(0, canvasElement.height);\n                canvas.lineTo( canvasElement.width, canvasElement.height);\n                canvas.lineTo( canvasElement.width,0);\n                canvas.rect(maskStartX, maskStartY, maskWidth, maskHeight);\n                canvas.fill();\n\n                canvas.beginPath();\n                if (lastCode) {\n                    let okColor = getComputedStyle(this).getPropertyValue('--dbp-success-bg-color');\n                    let notOkColor = getComputedStyle(this).getPropertyValue('--dbp-danger-bg-color');\n                    canvas.fillStyle = matched ? okColor : notOkColor;\n                } else {\n                    canvas.fillStyle = 'white';\n                }\n\n                let borderWidth = Math.max(maskWidth, maskHeight) / 50;\n                canvas.moveTo(maskStartX,maskStartY);\n                canvas.rect(maskStartX, maskStartY, maskWidth/3, borderWidth);\n                canvas.rect(maskStartX, maskStartY, borderWidth, maskHeight/3);\n                canvas.rect(maskStartX + maskWidth/3*2, maskStartY, maskWidth/3, borderWidth);\n                canvas.rect(maskStartX + maskWidth - borderWidth, maskStartY, borderWidth, maskHeight/3);\n                canvas.rect(maskStartX, maskStartY + maskHeight - borderWidth, maskWidth/3, borderWidth);\n                canvas.rect(maskStartX, maskStartY + maskHeight/3*2, borderWidth, maskHeight/3);\n                canvas.rect(maskStartX + maskWidth/3*2, maskStartY + maskHeight - borderWidth, maskWidth/3, borderWidth);\n                canvas.rect(maskStartX + maskWidth - borderWidth, maskStartY + maskHeight/3*2, borderWidth, maskHeight/3);\n                canvas.fill();\n\n                targetCanvas.height = canvasElement.height;\n                targetCanvas.width = canvasElement.width;\n                targetCanvas.getContext(\"2d\").drawImage(canvasElement, 0, 0);\n\n                if (!firstDrawDone) {\n                    this.dispatchEvent(new CustomEvent(\"scan-started\", {bubbles: true, composed: true}));\n                    firstDrawDone = true;\n                }\n            }\n            console.assert(this._requestID === null);\n            this._requestID = requestAnimationFrame(tick);\n        };\n\n        if (video !== null) {\n            video.setAttribute(\"playsinline\", true); // required to tell iOS safari we don't want fullscreen\n            video.play();\n            this._videoRunning = true;\n\n            console.assert(this._requestID === null);\n            this._videoElement = video;\n            this._loading = true;\n            this._loadingMessage = i18n.t('loading-video');\n            this._requestID = requestAnimationFrame(tick);\n        }\n    }\n\n    /**\n     * Update if video source is changed\n     *\n     * @param e\n     */\n    async _onUpdateSource(e) {\n        this._activeCamera = e.srcElement.value;\n        await this.stopScanning();\n        await this.startScanning();\n        console.log(\"Changed Media\");\n    }\n\n    /**\n     * Stops the active video and scan process\n     *\n     */\n    async stopScanning() {\n        const release = await this._lock.acquire();\n        try {\n            if (this._videoElement !== null) {\n                let video = this._videoElement;\n                video.srcObject.getTracks().forEach(function(track) {\n                    track.stop();\n                });\n                this._videoElement = null;\n            }\n\n            if (this._requestID !== null) {\n                cancelAnimationFrame(this._requestID);\n                this._requestID = null;\n            }\n\n            this._askPermission = false;\n            this._videoRunning = false;\n            this._loading = false;\n\n            this._loadingMessage = '';\n        } finally {\n            release();\n        }\n    }\n\n    static get styles() {\n        // language=css\n        return css`\n            ${commonStyles.getThemeCSS()}\n            ${commonStyles.getGeneralCSS()}\n            ${commonStyles.getSelect2CSS()}\n            ${commonStyles.getButtonCSS()}\n            \n            #loadingMessage {\n                text-align: center;\n                padding: 40px;\n            }\n            \n            .wrapper-msg {\n                width: 100%;\n                display: flex;\n                justify-content: center;\n                align-items: baseline;\n            }\n        \n            #canvas {\n                margin-top: 2rem;\n                max-height: calc(100vh - 100px);\n                max-width: 100%;\n            }\n        \n            .output {\n                  margin-top: 20px;\n                  background: #eee;\n                  padding: 10px;\n                  padding-bottom: 0;\n            }\n        \n            .output div {\n                  padding-bottom: 10px;\n                  word-wrap: break-word;\n            }\n\n            .spinner{\n                margin-right: 10px;\n                font-size: 0.7em;\n            }\n            \n            #videoSource{\n                padding-bottom: calc(0.375em - 2px);\n                padding-left: 0.75em;\n                padding-right: 1.75em;\n                padding-top: calc(0.375em - 2px);\n                background-position-x: calc(100% - 0.4rem);\n                font-size: inherit;\n            }\n            \n            #videoSource:hover {\n                background: calc(100% - 0.2rem) center no-repeat url(\"${unsafeCSS(getIconSVGURL('chevron-down'))}\");\n                color: black;\n                background-position-x: calc(100% - 0.4rem);\n                background-size: auto 45%;\n            }\n            \n            select:not(.select)#videoSource{\n                background-size: auto 45%;\n            }\n            \n            .border{\n                margin-top: 2rem;\n                padding-top: 2rem;\n                border-top: 1px solid black;\n            }\n            \n            #video video, #video{\n                height: 0px;\n                width: 0px;\n                opacity: 0;\n            }\n            \n            @media only screen\n            and (orientation: portrait)\n            and (max-device-width: 765px) {   \n                .button-wrapper{    \n                    display: flex;\n                   justify-content: space-between;\n                }\n            }\n        `;\n    }\n\n    render() {\n        let hasDevices = this._devices.size > 0;\n        let showCanvas = this._videoRunning && !this._askPermission && !this._loading;\n        let noSupportString = checkIosMobileSupport(this._devices) ? i18n.t('no-ios-support') : i18n.t('no-support');\n\n        return html`\n            <div class=\"columns\">\n                <div class=\"column\">\n                    \n                    <div class=\"${classMap({hidden: !hasDevices})}\">\n                    \n                        \n                        <div class=\"button-wrapper\">\n                            <button class=\"start button is-primary ${classMap({hidden: this._videoRunning})}\" @click=\"${() => this.startScanning()}\" title=\"${i18n.t('start-scan')}\">${i18n.t('start-scan')}</button>\n                            <button class=\"stop button is-primary ${classMap({hidden: !this._videoRunning})}\" @click=\"${() => this.stopScanning()}\" title=\"${i18n.t('stop-scan')}\">${i18n.t('stop-scan')}</button>\n                            \n                            <select id=\"videoSource\" class=\"button\" @change=${this._onUpdateSource}>\n                                ${Array.from(this._devices).map(item => html`<option value=\"${item[0]}\">${item[1]}</option>`)}\n                            </select>\n\n                        </div>\n                       \n                        <div id=\"loadingMessage\" class=\"${classMap({hidden: showCanvas})}\">\n                            <div class=\"wrapper-msg\">\n                                <dbp-mini-spinner class=\"spinner ${classMap({hidden: !this._loading})}\"></dbp-mini-spinner>\n                                <div class=\"loadingMsg\">${this._loadingMessage}</div>\n                            </div>\n                       </div>\n                       <canvas id=\"canvas\" class=\"${classMap({hidden: !showCanvas})}\"></canvas>\n                       <div id=\"video\"></div>\n                        <div class=\"output ${classMap({hidden: !(this.showOutput && showCanvas)})}\">\n                          ${ (this._outputData !== null) ? html`\n                            <div><b>${i18n.t('data')}:</b> <span>${this._outputData}</span></div>\n                          ` : html`\n                            <div>${i18n.t('no-qr-detected')}</div>\n                          `}\n                        </div>\n                    </div>\n                    <div class=\"${classMap({hidden: hasDevices})}\">\n                        ${noSupportString}\n                    </div>\n                </div>\n            </div>\n        `;\n    }\n}","import {createI18nInstance} from './i18n.js';\nimport {css, html} from 'lit-element';\nimport {ScopedElementsMixin} from '@open-wc/scoped-elements';\nimport * as commonUtils from '@dbp-toolkit/common/utils';\nimport {Icon} from '@dbp-toolkit/common';\nimport * as commonStyles from '@dbp-toolkit/common/styles';\nimport {AdapterLitElement} from '@dbp-toolkit/provider/src/adapter-lit-element';\nimport {QrCodeScanner} from \"@dbp-toolkit/qr-code-scanner\";\n\nconst i18n = createI18nInstance();\n\n\nclass VerifyVc extends ScopedElementsMixin(AdapterLitElement) {\n    constructor() {\n        super();\n        this.auth = {};\n        this.lang = i18n.language;\n    }\n\n    static get scopedElements() {\n        return {\n            'dbp-icon': Icon,\n            'dbp-code-scanner': QrCodeScanner\n        };\n    }\n\n    static get properties() {\n        return {\n            ...super.properties,\n            lang: { type: String },\n            auth: { type: Object },\n        };\n    }\n\n    connectedCallback() {\n        super.connectedCallback();\n    }\n\n    update(changedProperties) {\n        changedProperties.forEach((oldValue, propName) => {\n            switch (propName) {\n                case \"lang\":\n                    i18n.changeLanguage(this.lang);\n                    break;\n            }\n        });\n\n        super.update(changedProperties);\n    }\n\n    static get styles() {\n        // language=css\n        return css`\n            ${commonStyles.getThemeCSS()}\n\n            \n        `;\n    }\n\n    // todo: upload?\n    // todo: confirmation screen\n    render() {\n        return html`\n            <dbp-code-scanner\n                lang=\"${this.lang}\"\n                @scan-started=\"${(e) => console.log('scan-started', e)}\"\n                @code-detected=\"${(e) => console.log('code-detected', e)}\"\n            ></dbp-code-scanner>\n        `;\n    }\n}\n\ncommonUtils.defineCustomElement('verify-vc', VerifyVc);\n"],"names":["i18n","createInstance","en","de","E_CANCELED","Error","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","Semaphore","constructor","_maxConcurrency","_cancelError","_queue","_value","acquire","locked","this","isLocked","ticketPromise","push","_dispatch","runExclusive","callback","release","_currentReleaser","releaser","undefined","cancel","forEach","ticket","nextTicket","shift","released","__awaiter$1","Mutex","cancelError","_semaphore","QRScanner","_engine","_canvas","document","createElement","_scanner","canvas","x","y","width","height","import","default","WORKER_PATH","commonUtils.getAssetURL","createQrEngine","data","scanImage","QrCodeScanner","ScopedElementsMixin","DBPLitElement","lang","_askPermission","_loading","showOutput","stopScan","_activeCamera","_devices","Map","_requestID","_loadingMessage","matchRegex","_videoElement","_outputData","_videoRunning","_lock","Icon","MiniSpinner","type","String","Boolean","attribute","connectedCallback","changeLanguage","devices","async","devices_map","navigator","mediaDevices","enumerateDevices","getUserMedia","err","console","log","name","message","device","kind","id","deviceId","test","userAgent","set","t","label","size","getVideoDevices","has","Array","from","getPrimaryDevice","startScanning","stopScanning","disconnectedCallback","updated","changedProperties","get","update","oldValue","propName","_startScanning","assert","updateComplete","targetCanvas","_","targetvideo","canvasElement","firstDrawDone","html","video","videoId","constraint","facingMode","mirrored","stream","srcObject","createVideoElement","appendChild","lastCode","lastSentData","detector","detectorRunning","tick","readyState","HAVE_ENOUGH_DATA","videoHeight","videoWidth","getContext","drawImage","maskWidth","maskHeight","maskStartX","maskStartY","maxSize","lastVideo","scan","code","dispatchEvent","CustomEvent","bubbles","composed","detail","matched","match","beginPath","fillStyle","moveTo","lineTo","rect","fill","okColor","getComputedStyle","getPropertyValue","notOkColor","borderWidth","Math","max","requestAnimationFrame","setAttribute","play","srcElement","getTracks","track","stop","cancelAnimationFrame","css","commonStyles.getThemeCSS","commonStyles.getGeneralCSS","commonStyles.getSelect2CSS","commonStyles.getButtonCSS","unsafeCSS","getIconSVGURL","render","hasDevices","showCanvas","noSupportString","classMap","hidden","_onUpdateSource","map","item","createI18nInstance","VerifyVc","AdapterLitElement","auth","language","super","properties","Object","commonUtils.defineCustomElement"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;gSAKO,MAAMA,EAAOC,EAAe,CAACC,6kBAAQC,0oBAAS,KAAM,MCHrDC,EAAa,IAAIC,MAAM,6BAE7B,IAAIC,EAAkD,SAAUC,EAASC,EAAYC,EAAGC,UAE7E,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,YACtCC,EAAUC,OAAeC,EAAKN,EAAUO,KAAKF,IAAW,MAAOG,GAAKL,EAAOK,aAC3EC,EAASJ,OAAeC,EAAKN,EAAS,MAAUK,IAAW,MAAOG,GAAKL,EAAOK,aAC9EF,EAAKI,OAJHL,EAIaK,EAAOC,KAAOT,EAAQQ,EAAOL,QAJ1CA,EAIyDK,EAAOL,MAJhDA,aAAiBN,EAAIM,EAAQ,IAAIN,GAAE,SAAUG,GAAWA,EAAQG,OAITO,KAAKR,EAAWK,GAClGH,GAAMN,EAAYA,EAAUa,MAAMhB,EAASC,GAAc,KAAKS,YAGtE,MAAMO,EACFC,YAAYC,EAAiBC,EAAevB,WACnCsB,gBAAkBA,OAClBC,aAAeA,OACfC,OAAS,GACVF,GAAmB,QACb,IAAIrB,MAAM,0DAEfwB,OAASH,EAElBI,gBACUC,EAASC,KAAKC,WACdC,EAAgB,IAAIvB,SAAQ,CAACC,EAASC,IAAWmB,KAAKJ,OAAOO,KAAK,CAAEvB,QAAAA,EAASC,OAAAA,aAC9EkB,GACDC,KAAKI,YACFF,EAEXG,aAAaC,UACFhC,EAAU0B,UAAM,OAAQ,GAAQ,kBAC5BjB,EAAOwB,SAAiBP,KAAKF,2BAEnBQ,EAASvB,WAGtBwB,QAIZN,kBACWD,KAAKH,QAAU,EAG1BU,aACQP,KAAKN,gBAAkB,QACjB,IAAIrB,MAAM,wHAEhB2B,KAAKQ,iBAAkB,OACjBC,EAAWT,KAAKQ,sBACjBA,sBAAmBE,EACxBD,KAGRE,cACSf,OAAOgB,SAASC,GAAWA,EAAOhC,OAAOmB,KAAKL,qBAC9CC,OAAS,GAElBQ,kBACUU,EAAad,KAAKJ,OAAOmB,YAC1BD,EACD,WACAE,GAAW,OACVR,iBAAmB,KAChBQ,IAEJA,GAAW,OACNnB,cACAO,cAETU,EAAWlC,QAAQ,CAACoB,KAAKH,SAAUG,KAAKQ,oBAIhD,IAAIS,EAAoD,SAAU1C,EAASC,EAAYC,EAAGC,UAE/E,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,YACtCC,EAAUC,OAAeC,EAAKN,EAAUO,KAAKF,IAAW,MAAOG,GAAKL,EAAOK,aAC3EC,EAASJ,OAAeC,EAAKN,EAAS,MAAUK,IAAW,MAAOG,GAAKL,EAAOK,aAC9EF,EAAKI,OAJHL,EAIaK,EAAOC,KAAOT,EAAQQ,EAAOL,QAJ1CA,EAIyDK,EAAOL,MAJhDA,aAAiBN,EAAIM,EAAQ,IAAIN,GAAE,SAAUG,GAAWA,EAAQG,OAITO,KAAKR,EAAWK,GAClGH,GAAMN,EAAYA,EAAUa,MAAMhB,EAASC,GAAc,KAAKS,YAGtE,MAAMiC,EACFzB,YAAY0B,QACHC,WAAa,IAAI5B,EAAU,EAAG2B,GAEvCrB,iBACWmB,EAAYjB,UAAM,OAAQ,GAAQ,mBAC5BS,SAAkBT,KAAKoB,WAAWtB,iBACpCW,KAGfJ,aAAaC,UACFN,KAAKoB,WAAWf,cAAa,IAAMC,MAE9CL,kBACWD,KAAKoB,WAAWnB,WAG3BM,eACSa,WAAWb,UAEpBI,gBACWX,KAAKoB,WAAWT,UCK/B,MAAMU,EACF5B,mBACS6B,QAAU,UACVC,QAAUC,SAASC,cAAc,eACjCC,SAAW,gBAGTC,EAAQC,EAAGC,EAAGC,EAAOC,GACN,OAAlB/B,KAAK0B,gBACAA,gBAAkBM,OAAO,uCAAeC,aACxCP,SAASQ,YAAcC,iCAAiC,6BAE5C,OAAjBnC,KAAKsB,eACAA,cAAgBtB,KAAK0B,SAASU,eAAepC,KAAK0B,SAASQ,wBAGzD,CAACG,WAAYrC,KAAK0B,SAASY,UAAUX,EAAQ,CAACC,EAAGA,EAAGC,EAAGA,EAAGC,MAAOA,EAAOC,OAAQA,GAAS/B,KAAKsB,QAAStB,KAAKuB,UACrH,MAAOrC,UACE,OAMZ,MAAMqD,UAAsBC,EAAoBC,IACnDhD,2BAESiD,KAAO,UAEPC,gBAAiB,OACjBC,UAAW,OAEXC,YAAa,OACbC,UAAW,OAEXC,cAAgB,QAEhBC,SAAW,IAAIC,SACfC,WAAa,UACbC,gBAAkB,QAElBC,WAAa,UACbC,cAAgB,UAChBC,YAAc,UACdC,eAAgB,OAChBC,MAAQ,IAAItC,oCAIV,YACSuC,qBACQC,iCAKjB,CACHhB,KAAM,CAAEiB,KAAMC,QACdf,WAAY,CAAEc,KAAME,QAASC,UAAW,eACxChB,SAAU,CAAEa,KAAME,QAASC,UAAW,aACtCV,WAAY,CAAEO,KAAMC,OAAQE,UAAW,eACvCf,cAAe,CAAEY,KAAMC,OAAQE,WAAW,GAC1ClB,SAAU,CAAEe,KAAME,QAASC,WAAW,GACtCd,SAAU,CAAEW,KAAMV,IAAKa,WAAW,GAClCX,gBAAiB,CAAEQ,KAAMC,OAAQE,WAAW,GAC5CR,YAAa,CAAEK,KAAMC,OAAQE,WAAW,GACxCnB,eAAgB,CAAEgB,KAAME,QAASC,WAAW,GAC5CP,cAAe,CAAEI,KAAME,QAASC,WAAW,oCAKzCC,oBACN/F,EAAKgG,eAAehE,KAAK0C,UAErBuB,QApJZC,qBACQC,EAAc,IAAIlB,OAClBmB,UAAUC,cACPD,UAAUC,aAAaC,kBACvBF,UAAUC,aAAaE,aAAc,KAEpCN,MAEAA,QAAgBG,UAAUC,aAAaC,mBACzC,MAAOE,UACLC,QAAQC,IAAIF,EAAIG,KAAO,KAAOH,EAAII,SAC3BT,MAGN,IAAIU,KAAUZ,KACK,eAAhBY,EAAOC,KAAuB,KAC1BC,EAAKF,EAAOG,SACZ,iEAAiEC,KAAKb,UAAUc,YAChFf,EAAYgB,IAAI,cAAenH,EAAKoH,EAAE,gBACtCjB,EAAYgB,IAAI,OAAQnH,EAAKoH,EAAE,kBAE/BjB,EAAYgB,IAAIJ,IAAU,EAAMF,EAAOQ,OAASrH,EAAKoH,EAAE,WAAajB,EAAYmB,KAAO,WAI5FnB,SAEAA,EAyHaoB,QACfxC,cAvKb,SAA0BkB,SAClB,iEAAiEgB,KAAKb,UAAUc,YAC5EjB,EAAQuB,IAAI,eACL,cAEXvB,EAAQqB,KACDG,MAAMC,KAAKzB,GAAS,GAAG,GAE3B,KA+JkB0B,CAAiB1B,IAAY,QAC7CjB,SAAWiB,EAEXjE,KAAK8C,gBACA9C,KAAK4F,mDAKT5F,KAAK6F,qBACLC,uBAGVC,QAAQC,GACAA,EAAkBC,IAAI,cAAgBjG,KAAK8C,cACtC8C,iBACGI,EAAkBC,IAAI,aAAejG,KAAK8C,eAC7C+C,eAIbK,OAAOF,GACHA,EAAkBpF,SAAQ,CAACuF,EAAUC,YACzBA,OACC,OACDpI,EAAKgG,eAAehE,KAAK0C,gBAK/BwD,OAAOF,+BAOPhG,KAAK6F,qBAELtF,QAAgBP,KAAKwD,MAAM1D,oBAEvBE,KAAKqG,yBAEX9F,4BAKJkE,QAAQ6B,OAAOtG,KAAKwD,MAAMvD,kBACpBD,KAAKuG,mBAEPC,EAAexG,KAAKyG,EAAE,WACtBC,EAAc1G,KAAKyG,EAAE,UACrBE,EAAgBnF,SAASC,cAAc,UACvCmF,GAAgB,OAEfjE,gBAAiB,OACjBQ,gBAAkB0D,SAAK,IAA5B,UAAA,KAA+B7I,EAAKoH,EAAE,oBAA4BpH,EAAKoH,EAAE,qBACrE0B,QAlKZ5C,eAAkCc,OAE1B+B,EAAU/B,EACVgC,EAAa,CAAEF,MAAQ,CAAE9B,SAAU+B,IACrB,gBAAZA,GAAyC,KAAZA,GAC/BtC,QAAQC,IAAI,OAAQqC,GACpBC,EAAc,CAAEF,MAAO,CAAEG,WAAY,iBACjB,SAAZF,IACRtC,QAAQC,IAAI,QAASqC,GACrBC,EAAc,CAAEF,MAAO,CAAEG,WAAY,OAAQC,UAAU,SAGvDC,EAAS,SAETA,QAAe/C,UAAUC,aAAaE,aAAayC,GACrD,MAAM9H,GACJuF,QAAQC,IAAIxF,MAGD,OAAXiI,EAAiB,KACbL,EAAQtF,SAASC,cAAc,gBACnCqF,EAAMM,UAAYD,EACXL,SAGJ,KAyIeO,CAAmBrH,KAAK+C,eAC3B,OAAV+D,GACDJ,EAAYY,YAAYR,QAEvBnE,gBAAiB,MAElB4E,EAAW,KACXC,EAAe,KAEfC,EAAW,IAAIpG,EACfqG,GAAkB,QAEhBC,EAAO,aACJzE,WAAa,KACd4D,EAAMc,aAAed,EAAMe,iBAAkB,MACxCjF,UAAW,EAEhB+D,EAAc5E,OAAS+E,EAAMgB,YAC7BnB,EAAc7E,MAAQgF,EAAMiB,eACxBpG,EAASgF,EAAcqB,WAAW,MACtCrG,EAAOsG,UAAUnB,EAAO,EAAG,EAAGH,EAAc7E,MAAO6E,EAAc5E,YAE7DmG,EAAYvB,EAAc7E,MAC1BqG,EAAaxB,EAAc5E,OAC3BqG,EAAa,EACbC,EAAa,EAEbC,EAAU3B,EAAc7E,MAAQ6E,EAAc5E,OAAS4E,EAAc5E,OAAO,EAAI,EAAI4E,EAAc7E,MAAM,EAAI,EAChH2C,QAAQ6B,OAAOgC,GAAW3B,EAAc7E,OAASwG,GAAW3B,EAAc5E,QAC1EmG,EAAYI,EACZH,EAAaG,EACbF,EAAazB,EAAc7E,MAAM,EAAIoG,EAAU,EAC/CG,EAAa1B,EAAc5E,OAAO,EAAIoG,EAAW,MAE7CI,EAAYzB,EACXY,IACDA,GAAkB,EAClBD,EAASe,KAAK7B,EAAeyB,EAAYC,EAAYH,EAAWC,GAAY7I,MAAMmJ,IAC9Ef,GAAkB,EAEda,IAAcvI,KAAKqD,gBAEvBkE,EAAWkB,EAEPA,GACIjB,IAAiBiB,EAAKpG,YACjBiB,YAAcmF,EAAKpG,UACnBqG,cAAc,IAAIC,YAAY,gBAC/B,CAACC,SAAS,EAAMC,UAAU,EAAMC,OAAQ,MAASL,EAAKpG,UAE9DmF,EAAeiB,EAAKpG,YAEfiB,YAAc,KACnBkE,EAAe,eAKvBuB,IAAUxB,GAAoD,OAAzCA,EAASlF,KAAK2G,MAAMhJ,KAAKoD,eAGlDzB,EAAOsH,YACPtH,EAAOuH,UAAY,YACnBvH,EAAOwH,OAAO,EAAE,GAChBxH,EAAOyH,OAAO,EAAGzC,EAAc5E,QAC/BJ,EAAOyH,OAAQzC,EAAc7E,MAAO6E,EAAc5E,QAClDJ,EAAOyH,OAAQzC,EAAc7E,MAAM,GACnCH,EAAO0H,KAAKjB,EAAYC,EAAYH,EAAWC,GAC/CxG,EAAO2H,OAEP3H,EAAOsH,YACH1B,EAAU,KACNgC,EAAUC,iBAAiBxJ,MAAMyJ,iBAAiB,0BAClDC,EAAaF,iBAAiBxJ,MAAMyJ,iBAAiB,yBACzD9H,EAAOuH,UAAYH,EAAUQ,EAAUG,OAEvC/H,EAAOuH,UAAY,YAGnBS,EAAcC,KAAKC,IAAI3B,EAAWC,GAAc,GACpDxG,EAAOwH,OAAOf,EAAWC,GACzB1G,EAAO0H,KAAKjB,EAAYC,EAAYH,EAAU,EAAGyB,GACjDhI,EAAO0H,KAAKjB,EAAYC,EAAYsB,EAAaxB,EAAW,GAC5DxG,EAAO0H,KAAKjB,EAAaF,EAAU,EAAE,EAAGG,EAAYH,EAAU,EAAGyB,GACjEhI,EAAO0H,KAAKjB,EAAaF,EAAYyB,EAAatB,EAAYsB,EAAaxB,EAAW,GACtFxG,EAAO0H,KAAKjB,EAAYC,EAAaF,EAAawB,EAAazB,EAAU,EAAGyB,GAC5EhI,EAAO0H,KAAKjB,EAAYC,EAAaF,EAAW,EAAE,EAAGwB,EAAaxB,EAAW,GAC7ExG,EAAO0H,KAAKjB,EAAaF,EAAU,EAAE,EAAGG,EAAaF,EAAawB,EAAazB,EAAU,EAAGyB,GAC5FhI,EAAO0H,KAAKjB,EAAaF,EAAYyB,EAAatB,EAAaF,EAAW,EAAE,EAAGwB,EAAaxB,EAAW,GACvGxG,EAAO2H,OAEP9C,EAAazE,OAAS4E,EAAc5E,OACpCyE,EAAa1E,MAAQ6E,EAAc7E,MACnC0E,EAAawB,WAAW,MAAMC,UAAUtB,EAAe,EAAG,GAErDC,SACI8B,cAAc,IAAIC,YAAY,eAAgB,CAACC,SAAS,EAAMC,UAAU,KAC7EjC,GAAgB,GAGxBnC,QAAQ6B,OAA2B,OAApBtG,KAAKkD,iBACfA,WAAa4G,sBAAsBnC,IAG9B,OAAVb,IACAA,EAAMiD,aAAa,eAAe,GAClCjD,EAAMkD,YACDzG,eAAgB,EAErBkB,QAAQ6B,OAA2B,OAApBtG,KAAKkD,iBACfG,cAAgByD,OAChBlE,UAAW,OACXO,gBAAkBnF,EAAKoH,EAAE,sBACzBlC,WAAa4G,sBAAsBnC,0BAS1BzI,QACb6D,cAAgB7D,EAAE+K,WAAWlL,YAC5BiB,KAAK6F,qBACL7F,KAAK4F,gBACXnB,QAAQC,IAAI,4CAQNnE,QAAgBP,KAAKwD,MAAM1D,iBAEF,OAAvBE,KAAKqD,cAAwB,CACjBrD,KAAKqD,cACX+D,UAAU8C,YAAYtJ,SAAQ,SAASuJ,GACzCA,EAAMC,eAEL/G,cAAgB,KAGD,OAApBrD,KAAKkD,aACLmH,qBAAqBrK,KAAKkD,iBACrBA,WAAa,WAGjBP,gBAAiB,OACjBY,eAAgB,OAChBX,UAAW,OAEXO,gBAAkB,WAEvB5C,gCAMG+J,SAAI;cAAX;cAAA;cAAA;cAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;wEAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;WACMC,IACAC,IACAC,IACAC,IA+C0DC,EAAUC,EAAc,kBAiC5FC,aACQC,EAAa9K,KAAKgD,SAASsC,KAAO,EAClCyF,EAAa/K,KAAKuD,gBAAkBvD,KAAK2C,iBAAmB3C,KAAK4C,SACjEoI,GAAwChL,KAAKgD,SAja9C,uEAAuEiC,KAAKb,UAAUc,WAia5BlH,EAAKoH,EAAE,kBAAoBpH,EAAKoH,EAAE,sBAExFyB,SAAK;;;;kCAAZ;;;;qEAAA,cAAA,aAAA,MAAA;oEAAA,cAAA,aAAA,MAAA;;8EAAA;kCAAA;;;;;0DAAA;;mEAAA;0DAAA;;;oDAAA;;6CAAA;4BAAA;;;kCAAA;0BAAA;;;;WAI0BoE,EAAS,CAACC,QAASJ,IAIgBG,EAAS,CAACC,OAAQlL,KAAKuD,iBAA4B,IAAMvD,KAAK4F,iBAA2B5H,EAAKoH,EAAE,cAAkBpH,EAAKoH,EAAE,cAC1H6F,EAAS,CAACC,QAASlL,KAAKuD,iBAA4B,IAAMvD,KAAK6F,gBAA0B7H,EAAKoH,EAAE,aAAiBpH,EAAKoH,EAAE,aAE9GpF,KAAKmL,gBACjD1F,MAAMC,KAAK1F,KAAKgD,UAAUoI,KAAIC,GAAQxE,SAAK,kBAAT,MAAA,cAA0BwE,EAAK,GAAOA,EAAK,MAKrDJ,EAAS,CAACC,OAAQH,IAETE,EAAS,CAACC,QAASlL,KAAK4C,WACjC5C,KAAKmD,gBAGX8H,EAAS,CAACC,QAASH,IAE1BE,EAAS,CAACC,SAAUlL,KAAK6C,YAAckI,KACjC,OAArB/K,KAAKsD,YAAwBuD,SAAK;sCAAnC,gBAAA;6BACS7I,EAAKoH,EAAE,QAAsBpF,KAAKsD,aAC1CuD,SAAK;mCAFN;6BAGM7I,EAAKoH,EAAE,mBAIR6F,EAAS,CAACC,OAAQJ,IAC1BE,ICvgB1B,MAAMhN,EAAOsN,IAGb,MAAMC,UAAiB/I,EAAoBgJ,IACvC/L,2BAESgM,KAAO,QACP/I,KAAO1E,EAAK0N,2CAIV,YACSjI,qBACQlB,uCAMjBoJ,MAAMC,YACTlJ,KAAM,CAAEiB,KAAMC,QACd6H,KAAM,CAAE9H,KAAMkI,UAItB9H,0BACUA,oBAGVmC,OAAOF,GACHA,EAAkBpF,SAAQ,CAACuF,EAAUC,YACzBA,OACC,OACDpI,EAAKgG,eAAehE,KAAK0C,gBAK/BwD,OAAOF,8BAKNsE,SAAI;cAAX;;;WACMC,KAQVM,gBACWhE,SAAK;;wBAAZ;iCAAA;kCAAA;;WAEgB7G,KAAK0C,MACKxD,GAAMuF,QAAQC,IAAI,eAAgBxF,KACjCA,GAAMuF,QAAQC,IAAI,gBAAiBxF,MAMtE4M,EAAgC,YAAaP"}