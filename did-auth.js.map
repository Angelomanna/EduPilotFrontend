{"version":3,"file":"did-auth.js","sources":["../src/did-auth.js"],"sourcesContent":["import {createI18nInstance} from './i18n.js';\nimport {css, html} from 'lit-element';\nimport {ScopedElementsMixin} from '@open-wc/scoped-elements';\nimport * as commonUtils from '@dbp-toolkit/common/utils';\nimport {Icon} from '@dbp-toolkit/common';\nimport * as commonStyles from '@dbp-toolkit/common/styles';\nimport {AdapterLitElement} from '@dbp-toolkit/provider/src/adapter-lit-element';\nimport QRCode from 'webcomponent-qr-code/qr-code';\n\nconst i18n = createI18nInstance();\n\nclass DidAuth extends ScopedElementsMixin(AdapterLitElement) {\n    constructor() {\n        super();\n        this.auth = {};\n        this.entryPointUrl = '';\n        this.lang = i18n.language;\n        this.authenticated = false;\n    }\n\n    static get scopedElements() {\n        return {\n            'dbp-icon': Icon,\n            'dbp-qr-code': QRCode\n        };\n    }\n\n    static get properties() {\n        return {\n            ...super.properties,\n            lang: { type: String },\n            auth: { type: Object },\n            entryPointUrl: { type: String, attribute: 'entry-point-url' },\n            authenticated: { type: Boolean, attribute: false },\n            didCommInvite: { type: String },\n            intervalId: { type: Number },\n        };\n    }\n\n    async connectedCallback() {\n        super.connectedCallback();\n\n        this.didCommInvite = await this.fetchDidCommInvite();\n\n        this.intervalId = setInterval(async () => {\n            if (this.didCommInvite === null) {\n                return;\n            }\n            const didCommInviteDecoded = JSON.parse(this.didCommInvite);\n            const inviteId = didCommInviteDecoded.invitation['@id'];\n            console.log(inviteId);\n            try {\n                const res = await this.fetchDidCommInviteStatus(inviteId);\n                const resJson = JSON.parse(res);\n                console.log('Invite accepted! ', resJson);\n                this.authenticated = true;\n                clearInterval(this.intervalId);\n\n                sessionStorage.setItem('did-comm-MyDID', resJson.MyDID);\n                sessionStorage.setItem('did-comm-TheirDID', resJson.TheirDID);\n\n            } catch (error) {\n                console.log('Invite not accepted yet. :(');\n            }\n\n        }, 1000);\n    }\n\n    disconnectedCallback() {\n        super.disconnectedCallback();\n        if (this.intervalId) {\n            clearInterval(this.intervalId);\n        }\n    }\n\n    update(changedProperties) {\n        changedProperties.forEach((oldValue, propName) => {\n            switch (propName) {\n                case \"lang\":\n                    i18n.changeLanguage(this.lang);\n                    break;\n            }\n        });\n\n        super.update(changedProperties);\n    }\n\n    static get styles() {\n        // language=css\n        return css`\n            ${commonStyles.getThemeCSS()}\n            \n            .success {\n                font-size: 10rem;\n                line-height: 10rem;\n                color: green;\n            }\n\n            .qr-wrap {\n                width: fit-content;\n                text-align: center;\n            }\n            \n            #copyText {\n                position: absolute;\n                left: 10000rem;\n                opacity: 0;\n            }\n        `;\n    }\n\n    async httpGetAsync(url, options) {\n        let response = await fetch(url, options).then(result => {\n            if (!result.ok) throw result;\n            return result.json();\n        });\n\n        return response;\n    }\n\n    async fetchDidCommInvite() {\n        const options = {\n            headers: {\n                Authorization: \"Bearer \" + this.auth.token\n            }\n        };\n        const url = this.entryPointUrl + '/did_connections?page=1';\n        const resp = await this.httpGetAsync(url, options);\n        return resp['hydra:member'][0].invitation;\n    }\n\n    async fetchDidCommInviteStatus(inviteId) {\n        const options = {\n            headers: {\n                Authorization: \"Bearer \" + this.auth.token\n            }\n        };\n        const url = this.entryPointUrl + '/did_connections/' + inviteId;\n        const resp = await this.httpGetAsync(url, options);\n        return resp.invitation;\n    }\n\n    async onCopy(event) {\n        event.preventDefault();\n        const copyText = event.currentTarget.previousElementSibling;\n        copyText.select();\n        copyText.setSelectionRange(0, 1000000);\n        document.execCommand('copy');\n    }\n\n    // todo: check if already verified.. (polling)\n    // todo: re-authenticate\n    // todo: fix link to other pages.. (use router, without page reload.)\n    render() {\n        if (!this.auth.token) {\n            return html`\n                <p>${i18n.t('please-login')}</p>\n            `;\n        }\n\n        if (!this.authenticated) {\n            const qrData = btoa(this.didCommInvite);\n\n            if (!this.didCommInvite) {\n                return html`\n                  loading...\n                `;\n            }\n\n            return html`\n            <p>\n                ${i18n.t('did-auth.scan')}\n            </p>\n            \n            <div class=\"qr-wrap\">\n                <dbp-qr-code\n                    data=\"${qrData}\"\n                    format=\"svg\"\n                    modulesize=\"5\"\n                    margin=\"1\"\n                ></dbp-qr-code>\n                <div>\n                    <input id=\"copyText\" type=\"text\" value=\"${this.didCommInvite}\" />\n                    <a href=\"#\" @click=\"${(e) => this.onCopy(e)}\">Copy to clipboard.</a>\n                </div>\n            </div>\n        `;\n        }\n\n        // todo: localize\n        return html`\n            <span class=\"success\">âœ”</span><br />\n            \n            <p>${i18n.t('did-auth.success')}</p>\n            \n            <p>\n                Now you can export <a href=\"/dist/de/issue-diploma\">diplomas</a>\n                or <a href=\"/dist/de/issue-grades\">grades</a>.\n            </p>\n        `;\n    }\n}\n\ncommonUtils.defineCustomElement('did-auth', DidAuth);\n"],"names":["i18n","createI18nInstance","DidAuth","ScopedElementsMixin","AdapterLitElement","constructor","auth","entryPointUrl","lang","language","authenticated","Icon","QRCode","super","properties","type","String","Object","attribute","Boolean","didCommInvite","intervalId","Number","connectedCallback","this","fetchDidCommInvite","setInterval","async","_this","inviteId","JSON","parse","invitation","console","log","res","fetchDidCommInviteStatus","resJson","clearInterval","sessionStorage","setItem","MyDID","TheirDID","error","disconnectedCallback","update","changedProperties","forEach","oldValue","propName","changeLanguage","css","commonStyles.getThemeCSS","url","options","fetch","then","result","ok","json","headers","Authorization","token","httpGetAsync","event","preventDefault","copyText","currentTarget","previousElementSibling","select","setSelectionRange","document","execCommand","render","html","t","qrData","btoa","e","onCopy","commonUtils.defineCustomElement"],"mappings":";;;;0NASA,MAAMA,EAAOC,IAEb,MAAMC,UAAgBC,EAAoBC,IACtCC,2BAESC,KAAO,QACPC,cAAgB,QAChBC,KAAOR,EAAKS,cACZC,eAAgB,oCAId,YACSC,gBACGC,uCAMZC,MAAMC,YACTN,KAAM,CAAEO,KAAMC,QACdV,KAAM,CAAES,KAAME,QACdV,cAAe,CAAEQ,KAAMC,OAAQE,UAAW,mBAC1CR,cAAe,CAAEK,KAAMI,QAASD,WAAW,GAC3CE,cAAe,CAAEL,KAAMC,QACvBK,WAAY,CAAEN,KAAMO,qDAKlBC,yBAEDH,oBAAsBI,KAAKC,0BAE3BJ,WAAaK,aAAYC,oBACC,OAAvBC,EAAKR,2BAIHS,EADuBC,KAAKC,MAAMH,EAAKR,eACPY,WAAW,OACjDC,QAAQC,IAAIL,aAEFM,QAAYP,EAAKQ,yBAAyBP,GAC1CQ,EAAUP,KAAKC,MAAMI,GAC3BF,QAAQC,IAAI,oBAAqBG,GACjCT,EAAKlB,eAAgB,EACrB4B,cAAcV,EAAKP,YAEnBkB,eAAeC,QAAQ,iBAAkBH,EAAQI,OACjDF,eAAeC,QAAQ,oBAAqBH,EAAQK,UAEtD,MAAOC,GACLV,QAAQC,IAAI,kCAGjB,KAGPU,6BACUA,uBACFpB,KAAKH,YACLiB,cAAcd,KAAKH,YAI3BwB,OAAOC,GACHA,EAAkBC,SAAQ,CAACC,EAAUC,YACzBA,OACC,OACDjD,EAAKkD,eAAe1B,KAAKhB,gBAK/BqC,OAAOC,8BAKNK,SAAI;cAAX;;;;;;;;;;;;;;;;;;WACMC,wBAqBSC,EAAKC,gBACCC,MAAMF,EAAKC,GAASE,MAAKC,QACrCA,EAAOC,GAAI,MAAMD,SACfA,EAAOE,2CAOZL,EAAU,CACZM,QAAS,CACLC,cAAe,UAAYrC,KAAKlB,KAAKwD,QAGvCT,EAAM7B,KAAKjB,cAAgB,uCACdiB,KAAKuC,aAAaV,EAAKC,IAC9B,gBAAgB,GAAGtB,0CAGJH,SACrByB,EAAU,CACZM,QAAS,CACLC,cAAe,UAAYrC,KAAKlB,KAAKwD,QAGvCT,EAAM7B,KAAKjB,cAAgB,oBAAsBsB,eACpCL,KAAKuC,aAAaV,EAAKC,IAC9BtB,wBAGHgC,GACTA,EAAMC,uBACAC,EAAWF,EAAMG,cAAcC,uBACrCF,EAASG,SACTH,EAASI,kBAAkB,EAAG,KAC9BC,SAASC,YAAY,QAMzBC,aACSjD,KAAKlB,KAAKwD,aACJY,SAAK;qBAAZ;eACS1E,EAAK2E,EAAE,qBAIfnD,KAAKd,cAAe,OACfkE,EAASC,KAAKrD,KAAKJ,sBAEpBI,KAAKJ,cAMHsD,SAAK;;kBAAZ;;;;;4BAAA;;;;;;8DAAA;0CAAA;;;WAEM1E,EAAK2E,EAAE,iBAKGC,EAMkCpD,KAAKJ,eACxB0D,GAAMtD,KAAKuD,OAAOD,KAnBtCJ,SAAK;;2BA0BbA,SAAK;;;iBAAZ;;;;;;WAGS1E,EAAK2E,EAAE,sBAUxBK,EAAgC,WAAY9E"}