{"version":3,"file":"issue-diploma.js","sources":["../src/issue-diploma.js"],"sourcesContent":["import {createI18nInstance} from './i18n.js';\nimport {css, html} from 'lit-element';\nimport {ScopedElementsMixin} from '@open-wc/scoped-elements';\nimport * as commonUtils from '@dbp-toolkit/common/utils';\nimport {Button, Icon} from '@dbp-toolkit/common';\nimport * as commonStyles from '@dbp-toolkit/common/styles';\nimport DBPLitElement from '@dbp-toolkit/common/dbp-lit-element';\n\nconst i18n = createI18nInstance();\n\n\nclass IssueDiploma extends ScopedElementsMixin(DBPLitElement) {\n    constructor() {\n        super();\n        this.lang = i18n.language;\n    }\n\n    static get scopedElements() {\n        return {\n            'dbp-icon': Icon,\n            'dbp-button': Button,\n        };\n    }\n\n    static get properties() {\n        return {\n            lang: { type: String },\n        };\n    }\n\n    connectedCallback() {\n        super.connectedCallback();\n    }\n\n    update(changedProperties) {\n        changedProperties.forEach((oldValue, propName) => {\n            switch (propName) {\n                case \"lang\":\n                    i18n.changeLanguage(this.lang);\n                    break;\n            }\n        });\n\n        super.update(changedProperties);\n    }\n\n    static get styles() {\n        // language=css\n        return css`\n            ${commonStyles.getThemeCSS()}\n            \n            ul {\n              list-style: none;\n              padding: 0;\n            }\n            \n            ul li {\n              display: flex;\n              justify-content: space-between;\n              margin-bottom: 1rem;\n            }\n        `;\n    }\n\n    export() {\n        console.log('export');\n    }\n\n    // todo: maybe derive diploma and grades from the same activity\n    // todo: check for login\n    // todo: check if did auth is done\n    // todo: fetch list of diplomas\n    // todo: modal with vc qr code\n    // todo: select format, select schema\n    render() {\n        const diplomas = [\n          'Bachelor of Science in Engineering',\n          'Bachelor of Arts'\n        ];\n\n        const diplomaList = diplomas.map((d) => html`\n            <li>\n                ${d}\n                <dbp-button type=\"is-primary\" value=\"Export\" no-spinner-on-click=\"true\" @click=\"${() => this.export()}\" />\n            </li>\n        `);\n\n        return html`\n            <ul>\n                ${diplomaList}\n            </ul>\n        `;\n    }\n}\n\ncommonUtils.defineCustomElement('issue-diploma', IssueDiploma);\n"],"names":["i18n","createI18nInstance","IssueDiploma","ScopedElementsMixin","DBPLitElement","constructor","lang","language","Icon","Button","type","String","connectedCallback","update","changedProperties","forEach","oldValue","propName","changeLanguage","this","css","commonStyles.getThemeCSS","export","console","log","render","diplomaList","map","d","html","commonUtils.defineCustomElement"],"mappings":";;;;;;;;;;;;;;sLAQA,MAAMA,EAAOC,IAGb,MAAMC,UAAqBC,EAAoBC,IAC3CC,2BAESC,KAAON,EAAKO,2CAIV,YACSC,eACEC,iCAKX,CACHH,KAAM,CAAEI,KAAMC,SAItBC,0BACUA,oBAGVC,OAAOC,GACHA,EAAkBC,SAAQ,CAACC,EAAUC,YACzBA,OACC,OACDjB,EAAKkB,eAAeC,KAAKb,gBAK/BO,OAAOC,8BAKNM,SAAI;cAAX;;;;;;;;;;;;WACMC,KAeVC,SACIC,QAAQC,IAAI,UAShBC,eAMUC,EALW,CACf,qCACA,oBAG2BC,KAAKC,GAAMC,SAAK;;kBAAZ;kGAAA;;WAEvBD,GACgF,IAAMT,KAAKG,oBAI9FO,SAAK;;kBAAZ;;WAEUH,IAMlBI,EAAgC,gBAAiB5B"}