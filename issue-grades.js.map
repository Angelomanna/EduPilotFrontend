{"version":3,"file":"issue-grades.js","sources":["../src/issue-grades.js"],"sourcesContent":["import {createI18nInstance} from './i18n.js';\nimport {css, html} from 'lit-element';\nimport {ScopedElementsMixin} from '@open-wc/scoped-elements';\nimport * as commonUtils from '@dbp-toolkit/common/utils';\nimport {Button, Icon} from '@dbp-toolkit/common';\nimport * as commonStyles from '@dbp-toolkit/common/styles';\nimport {AdapterLitElement} from '@dbp-toolkit/provider/src/adapter-lit-element';\nimport QRCode from \"webcomponent-qr-code/qr-code\";\n\nconst i18n = createI18nInstance();\n\n\nclass IssueGrades extends ScopedElementsMixin(AdapterLitElement) {\n    constructor() {\n        super();\n        this.auth = {};\n        this.entryPointUrl = '';\n        this.lang = i18n.language;\n        this.exporting = false;\n    }\n\n    static get scopedElements() {\n        return {\n          'dbp-icon': Icon,\n            'dbp-button': Button,\n            'dbp-qr-code': QRCode,\n        };\n    }\n\n    static get properties() {\n        return {\n            ...super.properties,\n            lang: { type: String },\n            exporting: { type: Boolean, attribute: false },\n            exportingId: { type: String },\n            courseGrades: { type: Array },\n            auth: { type: Object },\n            entryPointUrl: { type: String, attribute: 'entry-point-url' },\n        };\n    }\n\n    connectedCallback() {\n        super.connectedCallback();\n    }\n\n    update(changedProperties) {\n        changedProperties.forEach((oldValue, propName) => {\n            switch (propName) {\n                case \"lang\":\n                    i18n.changeLanguage(this.lang);\n                    break;\n                case \"entryPointUrl\":\n                    this.fetchCourseGrades().then((grades) => {\n                        this.courseGrades = grades;\n                    });\n                    break;\n            }\n        });\n\n        super.update(changedProperties);\n    }\n\n    static get styles() {\n        // language=css\n        return css`\n            ${commonStyles.getThemeCSS()}\n\n            .vc-list {\n                list-style: none;\n                padding: 0;\n            }\n\n            .vc-list li {\n                display: flex;\n                justify-content: space-between;\n                margin-bottom: 1rem;\n            }\n\n            .success {\n                font-size: 10rem;\n                line-height: 10rem;\n                color: green;\n            }\n        `;\n    }\n\n    async triggerSendOffer(myDid, theirDid, id) {\n        const options = {\n            method: 'post',\n            headers: {\n                Authorization: \"Bearer \" + this.auth.token,\n                'Content-Type': 'application/ld+json'\n            },\n            body: JSON.stringify({\n                myDid,\n                theirDid,\n                status: id\n            })\n        };\n        const url = this.entryPointUrl + '/credential/send_offer';\n        const resp = await this.httpGetAsync(url, options);\n        return resp;\n    }\n\n    async acceptRequest(piid, id) {\n        // todo: don't send id via status field.\n        const options = {\n            method: 'post',\n            headers: {\n                Authorization: \"Bearer \" + this.auth.token,\n                'Content-Type': 'application/ld+json'\n            },\n            body: JSON.stringify({\n                myDid: piid,\n                theirDid: 'none',\n                status: id\n            })\n        };\n        const url = this.entryPointUrl + '/credential/accept_request';\n        const resp = await this.httpGetAsync(url, options);\n        return resp;\n    }\n\n    async export(id) {\n        console.log('export credential', id);\n\n        const myDID = sessionStorage.getItem('did-comm-MyDID');\n        const theirDID = sessionStorage.getItem('did-comm-TheirDID');\n\n        if (!myDID || !theirDID) {\n            alert('No wallet app connected. Please connect your wallet first.');\n            return;\n        }\n\n        const res = await this.triggerSendOffer(myDID, theirDID, id);\n        console.log('triggerSendOffer', res);\n        const piid = JSON.parse(res.myDid).piid;\n\n        const invervalId = setInterval(async () => {\n            const res2 = await this.acceptRequest(piid, id);\n            if (res2.myDid !== '') {\n                console.log('request accepted');\n\n                clearInterval(invervalId);\n\n                this.exporting = true;\n                this.exportingId = id;\n            }\n        }, 1000);\n    }\n\n    async httpGetAsync(url, options) {\n        let response = await fetch(url, options).then(result => {\n            if (!result.ok) throw result;\n            return result.json();\n        });\n\n        return response;\n    }\n\n    async fetchCourseGrades() {\n        const options = {\n            headers: {\n                Authorization: \"Bearer \" + this.auth.token\n            }\n        };\n        const url = this.entryPointUrl + '/course-grades?page=1';\n        const resp = await this.httpGetAsync(url, options);\n        return resp['hydra:member'];\n    }\n\n    // todo: maybe derive diploma and grades from the same activity\n    render() {\n        if (!this.auth.token) {\n            return html`\n                <p>${i18n.t('please-login')}</p>\n            `;\n        }\n\n        if (!this.exporting) {\n            const coursesList = this.courseGrades.map((d) => html`\n                <li>\n                    <div>\n                        <strong>${d.name}</strong><br />\n                        ${d.credits} ECTS<br />\n                        ${d.grade} Grade<br />\n                        ${d.achievenmentDate}<br />\n                    </div>\n                    <dbp-button type=\"is-primary\" value=\"Export\" no-spinner-on-click=\"true\" @click=\"${() => this.export(d['@id'])}\" />\n                </li>\n            `);\n\n            return html`\n                <ul class=\"vc-list\">\n                    ${coursesList}\n                </ul>\n            `;\n        }\n\n        return html`\n            <p>\n                ${i18n.t('issue-grades.scan')}\n            </p>\n\n            <span class=\"success\">âœ”</span><br />\n\n            <pre>${JSON.stringify(this.courseGrades.filter((d) => d['@id'] === this.exportingId)[0], null, 2)}</pre>\n        `;\n    }\n}\n\ncommonUtils.defineCustomElement('issue-grades', IssueGrades);\n"],"names":["i18n","createI18nInstance","IssueGrades","ScopedElementsMixin","AdapterLitElement","constructor","auth","entryPointUrl","lang","language","exporting","Icon","Button","QRCode","super","properties","type","String","Boolean","attribute","exportingId","courseGrades","Array","Object","connectedCallback","update","changedProperties","forEach","oldValue","propName","changeLanguage","this","fetchCourseGrades","then","grades","css","commonStyles.getThemeCSS","myDid","theirDid","id","options","method","headers","Authorization","token","body","JSON","stringify","status","url","httpGetAsync","piid","console","log","myDID","sessionStorage","getItem","theirDID","alert","res","triggerSendOffer","parse","invervalId","setInterval","async","_this","acceptRequest","clearInterval","fetch","result","ok","json","render","html","t","coursesList","map","d","name","credits","grade","achievenmentDate","export","filter","commonUtils.defineCustomElement"],"mappings":";;;;;;;;;;;;;;iOASA,MAAMA,EAAOC,IAGb,MAAMC,UAAoBC,EAAoBC,IAC1CC,2BAESC,KAAO,QACPC,cAAgB,QAChBC,KAAOR,EAAKS,cACZC,WAAY,oCAIV,YACOC,eACIC,gBACCC,uCAMZC,MAAMC,YACTP,KAAM,CAAEQ,KAAMC,QACdP,UAAW,CAAEM,KAAME,QAASC,WAAW,GACvCC,YAAa,CAAEJ,KAAMC,QACrBI,aAAc,CAAEL,KAAMM,OACtBhB,KAAM,CAAEU,KAAMO,QACdhB,cAAe,CAAES,KAAMC,OAAQE,UAAW,qBAIlDK,0BACUA,oBAGVC,OAAOC,GACHA,EAAkBC,SAAQ,CAACC,EAAUC,YACzBA,OACC,OACD7B,EAAK8B,eAAeC,KAAKvB,gBAExB,qBACIwB,oBAAoBC,MAAMC,SACtBb,aAAea,eAM9BT,OAAOC,8BAKNS,SAAI;cAAX;;;;;;;;;;;;;;;;;;WACMC,4BAqBaC,EAAOC,EAAUC,SAC9BC,EAAU,CACZC,OAAQ,OACRC,QAAS,CACLC,cAAe,UAAYZ,KAAKzB,KAAKsC,qBACrB,uBAEpBC,KAAMC,KAAKC,UAAU,CACjBV,MAAAA,EACAC,SAAAA,EACAU,OAAQT,KAGVU,EAAMlB,KAAKxB,cAAgB,sCACdwB,KAAKmB,aAAaD,EAAKT,uBAI1BW,EAAMZ,SAEhBC,EAAU,CACZC,OAAQ,OACRC,QAAS,CACLC,cAAe,UAAYZ,KAAKzB,KAAKsC,qBACrB,uBAEpBC,KAAMC,KAAKC,UAAU,CACjBV,MAAOc,EACPb,SAAU,OACVU,OAAQT,KAGVU,EAAMlB,KAAKxB,cAAgB,0CACdwB,KAAKmB,aAAaD,EAAKT,gBAIjCD,cACTa,QAAQC,IAAI,oBAAqBd,SAE3Be,EAAQC,eAAeC,QAAQ,kBAC/BC,EAAWF,eAAeC,QAAQ,yBAEnCF,IAAUG,cACXC,MAAM,oEAIJC,QAAY5B,KAAK6B,iBAAiBN,EAAOG,EAAUlB,GACzDa,QAAQC,IAAI,mBAAoBM,SAC1BR,EAAOL,KAAKe,MAAMF,EAAItB,OAAOc,KAE7BW,EAAaC,aAAYC,iBAER,YADAC,EAAKC,cAAcf,EAAMZ,IACnCF,QACLe,QAAQC,IAAI,oBAEZc,cAAcL,GAEdG,EAAKvD,WAAY,EACjBuD,EAAK7C,YAAcmB,KAExB,wBAGYU,EAAKT,gBACC4B,MAAMnB,EAAKT,GAASP,MAAKoC,QACrCA,EAAOC,GAAI,MAAMD,SACfA,EAAOE,0CAOZ/B,EAAU,CACZE,QAAS,CACLC,cAAe,UAAYZ,KAAKzB,KAAKsC,QAGvCK,EAAMlB,KAAKxB,cAAgB,qCACdwB,KAAKmB,aAAaD,EAAKT,IAC9B,gBAIhBgC,aACSzC,KAAKzB,KAAKsC,aACJ6B,SAAK;qBAAZ;eACSzE,EAAK0E,EAAE,qBAIf3C,KAAKrB,UAAW,OACXiE,EAAc5C,KAAKV,aAAauD,KAAKC,GAAMJ,SAAK;;;kCAAZ;0BAAA;0BAAA;0BAAA;;sGAAA;;eAGpBI,EAAEC,KACVD,EAAEE,QACFF,EAAEG,MACFH,EAAEI,kBAE0E,IAAMlD,KAAKmD,OAAOL,EAAE,mBAIvGJ,SAAK;;sBAAZ;;eAEUE,UAKPF,SAAK;;kBAAZ;;;;;mBAAA;WAEUzE,EAAK0E,EAAE,qBAKN5B,KAAKC,UAAUhB,KAAKV,aAAa8D,QAAQN,GAAMA,EAAE,SAAW9C,KAAKX,cAAa,GAAI,KAAM,KAK3GgE,EAAgC,eAAgBlF"}